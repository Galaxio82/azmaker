<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AzMaker</title>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            font-family: Arial, sans-serif;
            background-color: #1a1a1a;
            color: #f0f0f0;
            height: 100vh;
            user-select: none;
        }

        nav {
            background-color: #2a2a2a;
            padding: 10px;
            border-bottom: 1px solid #333;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
        }

        nav a {
            color: #f0f0f0;
            margin-right: 15px;
            text-decoration: none;
            padding: 8px;
            border-radius: 5px;
        }

        nav a:hover {
            background-color: #444;
        }

        .content {
            display: flex;
            margin-top: 60px;
            height: calc(100% - 60px);
        }

        aside {
            background-color: #2a2a2a;
            padding: 10px;
            border-right: 1px solid #333;
            height: 100%;
            position: fixed;
            top: 39px;
            overflow-y: auto;
            width: 200px;
        }

        aside a {
            color: #f0f0f0;
            margin-bottom: 10px;
            text-decoration: none;
            display: block;
            padding: 8px;
            border-radius: 5px;
        }

        aside a:hover {
            background-color: #444;
        }

        .main {
            margin-left: 220px;
            padding: 20px;
            width: calc(100% - 220px);
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            /* Pour éviter un grand espace en haut */
        }

        .box {
            background-color: #2a2a2a;
            /* Même couleur que aside */
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            width: 60%;
            /* Réduit la largeur */
            max-width: 900px;
            /* Limite la largeur max */
            height: auto;
            /* Hauteur automatique selon le contenu */
            min-height: 300px;
            /* Donne une hauteur minimale */
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.4);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            /* Centrer tout le texte */
        }

        h2 {
            color: #ccc;
            margin-top: 0;
        }

        a.button-link {
            background-color: #444;
            padding: 10px;
            color: #f0f0f0;
            text-decoration: none;
            border-radius: 5px;
            display: inline-block;
            margin-top: 10px;
        }

        a.button-link:hover {
            background-color: #555;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 2px;
            bottom: 2px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

        input:checked+.slider {
            background-color: #4caf50;
        }

        input:checked+.slider:before {
            transform: translateX(26px);
        }

        /* ScrollBar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #2a2a2a;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #444;
            border-radius: 10px;
            border: 2px solid #2a2a2a;
        }

        ::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }
    </style>
</head>

<body>
    <nav>
        <a href="#" onclick="navigateTo('index')">Commandes</a>
        <a href="#" onclick="navigateTo('page/event')">Évènements</a>
        <a href="#" onclick="navigateTo('page/variable')">Variables</a>
        <a href="#" onclick="navigateTo('page/bot')">Bot</a>
        <a href="#" onclick="navigateTo('page/about')">About</a>
    </nav>

    <div class="content">
        <aside>
            <a href="#" onclick="showSection('Compte')">Compte</a>
            <a href="#" onclick="showSection('Informations')">Informations</a>
            <a href="#" onclick="showSection('Support')">Support</a>
        </aside>

        <div class="main">
            <h1 id="main-name"></h1>
            <div class="box" id="Compte">
                <p>Bienvenue sur AzMaker, la plateforme dédiée à la création et à la gestion de votre bot.</p>
                <p>Nom d'utilisateur: <strong id="name"></strong></p>
                <p>Email: <strong id="email"></strong></p>
            </div>

            <div class="box" id="Informations">
                <p>AzMaker vous permet de personnaliser et gérer toutes les fonctionnalités de votre bot.</p>
                <p>Version actuelle : <strong>1.0.0</strong></p>

                <!-- Options pour activer/désactiver les modules -->
                <h3>Modules</h3>
                <div id="modules-container">
                    <!-- Les modules seront insérés ici dynamiquement -->
                </div>
            </div>

            <div class="box" id="Support">
                <p>Pour toute question ou assistance, n'hésitez pas à consulter les liens suivants :</p>
                <a href="https://support.example.com" class="button-link" target="_blank">Support Technique</a>
                <a href="https://forum.example.com" class="button-link" target="_blank">Forum de Discussion</a>
                <a href="https://docs.example.com" class="button-link" target="_blank">Documentation</a>
            </div>
        </div>
    </div>

    <script src="../../public/js/modules/jquery-3.6.0.min.js"></script>
    <script src="../../public/js/modules/duplicate.js"></script>
    <script>
        function navigateTo(page) {
            window.api.navigateTo(page);
        }

        window.api.infoAboutUse()
        window.apiReceive.receiveAuthentificateRemember((event, data) => {
            $('#name').html(data.name)
            $('#email').html(data.email)
        })

        function showSection(sectionId) {
            const sections = document.querySelectorAll('.box');
            sections.forEach(section => {
                section.style.display = 'none';
            });

            const activeSection = document.getElementById(sectionId);
            const MainName = document.getElementById("main-name");
            if (activeSection) {
                MainName.innerHTML = sectionId
                activeSection.style.display = 'block';

            }
        }

        function loadModuleSettings() {
            // Charger les paramètres des modules depuis le backend
            window.api.loadModules();
            window.apiReceive.receiveModules((event, modules) => {
                // Récupérer le conteneur des modules
                const modulesContainer = document.getElementById('modules-container');

                // Vider le conteneur avant d'ajouter de nouveaux modules
                modulesContainer.innerHTML = '';

                // Vérifier chaque module et générer le HTML en conséquence
                for (let moduleName in modules) {
                    // Créer un div pour chaque module
                    const moduleDiv = document.createElement('div');

                    // Créer l'élément label pour chaque module
                    const label = document.createElement('label');
                    label.textContent = moduleName.charAt(0).toUpperCase() + moduleName.slice(1); // Formate le nom du module (par exemple "discord" => "Discord")

                    // Créer un switch (checkbox) pour chaque module
                    const switchLabel = document.createElement('label');
                    switchLabel.classList.add('switch');

                    const input = document.createElement('input');
                    input.type = 'checkbox';
                    input.id = `${moduleName}Module`;
                    input.checked = modules[moduleName]; // Si le module est activé (true) ou non (false)

                    const span = document.createElement('span');
                    span.classList.add('slider');

                    // Ajouter les éléments au switch
                    switchLabel.appendChild(input);
                    switchLabel.appendChild(span);

                    // Ajouter le label du module et le switch au div
                    moduleDiv.appendChild(label);
                    moduleDiv.appendChild(switchLabel);

                    // Ajouter le div au conteneur des modules
                    modulesContainer.appendChild(moduleDiv);

                    input.addEventListener('change', saveAllModuleSettings);
                }
            });
        }

        function saveAllModuleSettings() {
            // Object qui va contenir les modules actifs
            const modules = {};

            // Récupérer l'état de chaque module activé
            const moduleNames = ['discord', 'mysql']; // Ajouter ici les autres modules possibles
            moduleNames.forEach(moduleName => {
                const moduleInput = document.getElementById(`${moduleName}Module`);
                if (moduleInput) { // Si l'élément existe
                    modules[moduleName] = moduleInput.checked; // Sauvegarder l'état du module
                }
            });

            window.api.saveModules(modules);
        }


        showSection('Compte');
        loadModuleSettings();
    </script>
</body>

</html>